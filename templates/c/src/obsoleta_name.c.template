#include "obsoleta_#OBSOLETA_NAME#.h"
#include <stdio.h>
#include <string.h>
#include "version.hpp"

#ifdef __cplusplus
extern "C" {
#endif

  
// Obsoleta api autogenerated with dixi --generate_c

#define inf(...) //printf(__VA_ARGS__)
#define err(...) printf(__VA_ARGS__)


const char* obsoleta_entry_#OBSOLETA_NAME#(const char* argument)
{
    if (!strcmp(argument, OBSOLETA_INFO))
    {
        printf("%s:%s", version_#OBSOLETA_NAME#[0]->name, version_#OBSOLETA_NAME#[0]->version);
        
        if (OBSOLETA_NOF_DEPENDS)
        {
            printf("<-");
            for(int i=1; i<=OBSOLETA_NOF_DEPENDS; i++)
            {
                printf("%s:%s ", version_#OBSOLETA_NAME#[i]->name, version_#OBSOLETA_NAME#[i]->version);
                obsoleta_#OBSOLETA_NAME#[i](OBSOLETA_INFO);
            }
        }
    }
    else if (!strcmp(argument, OBSOLETA_NAME))
    {
        return version_#OBSOLETA_NAME#[0]->name;
    }
    else if (!strcmp(argument, OBSOLETA_VERSION))
    {
        return version_#OBSOLETA_NAME#[0]->version;
    }
    else if (!strcmp(argument, OBSOLETA_CHECK))
    {
        inf("CHECK: checking %s\n", version_#OBSOLETA_NAME#[0]->name);
        for(int i=1; i<=OBSOLETA_NOF_DEPENDS; i++)
        {
            if (!compare_version_strings(version_#OBSOLETA_NAME#[i]->version, obsoleta_#OBSOLETA_NAME#[i](OBSOLETA_VERSION)))
            {
                err("check failed for %s, %s != %s", 
                     version_#OBSOLETA_NAME#[0]->name,
                     obsoleta_#OBSOLETA_NAME#[i](OBSOLETA_VERSION), 
                     version_#OBSOLETA_NAME#[i]->version);
                       
                return version_#OBSOLETA_NAME#[i]->name;
            }
            const char* check = obsoleta_#OBSOLETA_NAME#[i](OBSOLETA_CHECK);
            if (check)
            {
                return check;
            }
        }
    }
    return "";
}

#ifdef __cplusplus
}
#endif
